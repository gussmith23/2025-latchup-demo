/* Generated by Yosys 0.52+117 (git sha1 11f234824, c++ 16.0.0 -fPIC -O3) */

(* cells_not_processed =  1  *)
(* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:1.1-230.10" *)
module mul(a, b, out);
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:38.18-38.34" *)
  wire [31:0] _00_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:36.18-36.66" *)
  wire [17:0] _01_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:37.18-37.53" *)
  wire [15:0] _02_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:31.18-31.53" *)
  wire [31:0] _03_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:51.18-51.66" *)
  wire [29:0] _04_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:47.18-47.66" *)
  wire [17:0] _05_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:44.18-44.66" *)
  wire [47:0] _06_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:28.18-28.53" *)
  wire [26:0] _07_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:52.18-52.35" *)
  wire [15:0] _08_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:48.18-48.52" *)
  wire [15:0] _09_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:29.18-29.63" *)
  wire [31:0] _10_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:9.18-9.53" *)
  wire [31:0] _11_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:29.34-29.63" *)
  wire [31:0] _12_;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:3.18-3.19" *)
  input [15:0] a;
  wire [15:0] a;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:4.18-4.19" *)
  input [31:0] b;
  wire [31:0] b;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:6.19-6.22" *)
  output [31:0] out;
  wire [31:0] out;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:38.18-38.30" *)
  wire [31:0] wire_Expr_13;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:36.18-36.31" *)
  wire [17:0] wire_Expr_318;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:37.18-37.31" *)
  wire [15:0] wire_Expr_324;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:31.18-31.31" *)
  wire [31:0] wire_Expr_326;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:32.18-32.31" *)
  wire [47:0] wire_Expr_349;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:51.18-51.31" *)
  wire [29:0] wire_Expr_351;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:47.18-47.31" *)
  wire [17:0] wire_Expr_353;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:44.18-44.31" *)
  wire [47:0] wire_Expr_355;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:28.18-28.31" *)
  wire [26:0] wire_Expr_357;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:52.18-52.31" *)
  wire [15:0] wire_Expr_361;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:48.18-48.31" *)
  wire [15:0] wire_Expr_363;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:29.18-29.31" *)
  wire [31:0] wire_Expr_365;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:9.18-9.31" *)
  wire [31:0] wire_Expr_367;
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:10.18-10.31" *)
  wire [47:0] wire_Expr_420;
  (* module_not_derived = 32'd1 *)
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:190.3-229.23" *)
  DSP48E2 #(
    .ACASCREG(32'd0),
    .ADREG(32'd0),
    .ALUMODEREG(32'd0),
    .AMULTSEL(9'h041),
    .AREG(32'd0),
    .AUTORESET_PATDET(65'h04e4f5f5245534554),
    .AUTORESET_PRIORITY(41'h05245534554),
    .A_INPUT(49'h0444952454354),
    .BCASCREG(32'd0),
    .BMULTSEL(9'h042),
    .BREG(32'd0),
    .B_INPUT(49'h0444952454354),
    .CARRYINREG(32'd0),
    .CARRYINSELREG(32'd0),
    .CREG(32'd0),
    .DREG(32'd0),
    .INMODEREG(32'd0),
    .IS_ALUMODE_INVERTED(4'h0),
    .IS_CARRYIN_INVERTED(1'h0),
    .IS_CLK_INVERTED(1'h0),
    .IS_INMODE_INVERTED(5'h00),
    .IS_OPMODE_INVERTED(9'h000),
    .IS_RSTALLCARRYIN_INVERTED(1'h0),
    .IS_RSTALUMODE_INVERTED(1'h0),
    .IS_RSTA_INVERTED(1'h0),
    .IS_RSTB_INVERTED(1'h0),
    .IS_RSTCTRL_INVERTED(1'h0),
    .IS_RSTC_INVERTED(1'h0),
    .IS_RSTD_INVERTED(1'h0),
    .IS_RSTINMODE_INVERTED(1'h0),
    .IS_RSTM_INVERTED(1'h0),
    .IS_RSTP_INVERTED(1'h0),
    .MASK(48'h000000000000),
    .MREG(32'd0),
    .OPMODEREG(32'd0),
    .PATTERN(48'h000000000000),
    .PREADDINSEL(9'h041),
    .PREG(32'd0),
    .RND(48'h000000000000),
    .SEL_MASK(33'h04d41534b),
    .SEL_PATTERN(57'h05041545445524e),
    .USE_MULT(65'h04d554c5449504c59),
    .USE_PATTERN_DETECT(73'h04e4f5f504154444554),
    .USE_SIMD(41'h04f4e453438),
    .USE_WIDEXOR(41'h046414c5345),
    .XORSIMD(41'h0584f523132)
  ) module_ModuleInstanceSort_343 (
    .A(wire_Expr_351),
    .ACIN(30'h00000000),
    .ALUMODE(4'h7),
    .B(wire_Expr_318),
    .BCIN(18'h00000),
    .C(48'h000000000000),
    .CARRYCASCIN(1'h0),
    .CARRYIN(1'h0),
    .CARRYINSEL(3'h0),
    .CEA1(1'h1),
    .CEA2(1'h1),
    .CEAD(1'h1),
    .CEALUMODE(1'h1),
    .CEB1(1'h1),
    .CEB2(1'h1),
    .CEC(1'h1),
    .CECARRYIN(1'h1),
    .CECTRL(1'h1),
    .CED(1'h1),
    .CEINMODE(1'h1),
    .CEM(1'h1),
    .CEP(1'h1),
    .CLK(1'h0),
    .D(27'h0000000),
    .INMODE(5'h08),
    .MULTSIGNIN(1'h0),
    .OPMODE(9'h015),
    .P(wire_Expr_349),
    .PCIN(48'h000000000000),
    .RSTA(1'h0),
    .RSTALLCARRYIN(1'h0),
    .RSTALUMODE(1'h0),
    .RSTB(1'h0),
    .RSTC(1'h0),
    .RSTCTRL(1'h0),
    .RSTD(1'h0),
    .RSTINMODE(1'h0),
    .RSTM(1'h0),
    .RSTP(1'h0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "/var/folders/9x/r1p96l494956p9gddpl3pwl00000gn/T/cabc-d857-8810-a3bc.v:103.3-142.23" *)
  DSP48E2 #(
    .ACASCREG(32'd0),
    .ADREG(32'd0),
    .ALUMODEREG(32'd0),
    .AMULTSEL(9'h041),
    .AREG(32'd0),
    .AUTORESET_PATDET(65'h04e4f5f5245534554),
    .AUTORESET_PRIORITY(41'h05245534554),
    .A_INPUT(49'h0444952454354),
    .BCASCREG(32'd0),
    .BMULTSEL(9'h042),
    .BREG(32'd0),
    .B_INPUT(49'h0444952454354),
    .CARRYINREG(32'd0),
    .CARRYINSELREG(32'd0),
    .CREG(32'd0),
    .DREG(32'd0),
    .INMODEREG(32'd0),
    .IS_ALUMODE_INVERTED(4'h0),
    .IS_CARRYIN_INVERTED(1'h0),
    .IS_CLK_INVERTED(1'h0),
    .IS_INMODE_INVERTED(5'h00),
    .IS_OPMODE_INVERTED(9'h000),
    .IS_RSTALLCARRYIN_INVERTED(1'h0),
    .IS_RSTALUMODE_INVERTED(1'h0),
    .IS_RSTA_INVERTED(1'h0),
    .IS_RSTB_INVERTED(1'h0),
    .IS_RSTCTRL_INVERTED(1'h0),
    .IS_RSTC_INVERTED(1'h0),
    .IS_RSTD_INVERTED(1'h0),
    .IS_RSTINMODE_INVERTED(1'h0),
    .IS_RSTM_INVERTED(1'h0),
    .IS_RSTP_INVERTED(1'h0),
    .MASK(48'h000000000000),
    .MREG(32'd0),
    .OPMODEREG(32'd0),
    .PATTERN(48'h000000000000),
    .PREADDINSEL(9'h041),
    .PREG(32'd0),
    .RND(48'h000000000000),
    .SEL_MASK(33'h04d41534b),
    .SEL_PATTERN(57'h05041545445524e),
    .USE_MULT(65'h04d554c5449504c59),
    .USE_PATTERN_DETECT(73'h04e4f5f504154444554),
    .USE_SIMD(41'h04f4e453438),
    .USE_WIDEXOR(41'h046414c5345),
    .XORSIMD(41'h0584f523132)
  ) module_ModuleInstanceSort_390 (
    .A(wire_Expr_351),
    .ACIN(30'h00000000),
    .ALUMODE(4'h0),
    .B(wire_Expr_353),
    .BCIN(18'h00000),
    .C(wire_Expr_355),
    .CARRYCASCIN(1'h0),
    .CARRYIN(1'h0),
    .CARRYINSEL(3'h0),
    .CEA1(1'h1),
    .CEA2(1'h1),
    .CEAD(1'h1),
    .CEALUMODE(1'h1),
    .CEB1(1'h1),
    .CEB2(1'h1),
    .CEC(1'h1),
    .CECARRYIN(1'h1),
    .CECTRL(1'h1),
    .CED(1'h1),
    .CEINMODE(1'h1),
    .CEM(1'h1),
    .CEP(1'h1),
    .CLK(1'h0),
    .D(wire_Expr_357),
    .INMODE(5'h00),
    .MULTSIGNIN(1'h0),
    .OPMODE(9'h0b5),
    .P(wire_Expr_420),
    .PCIN(wire_Expr_355),
    .RSTA(1'h0),
    .RSTALLCARRYIN(1'h0),
    .RSTALUMODE(1'h0),
    .RSTB(1'h0),
    .RSTC(1'h0),
    .RSTCTRL(1'h0),
    .RSTD(1'h0),
    .RSTINMODE(1'h0),
    .RSTM(1'h0),
    .RSTP(1'h0)
  );
  assign out = wire_Expr_367;
  assign _08_ = a;
  assign _04_ = { 14'h0000, wire_Expr_361 };
  assign _09_ = wire_Expr_13[15:0];
  assign _05_ = { 2'h0, wire_Expr_363 };
  assign _06_ = { 16'h0000, wire_Expr_365 };
  assign _00_ = b;
  assign _02_ = wire_Expr_13[31:16];
  assign _01_ = { 2'h0, wire_Expr_324 };
  assign _03_ = wire_Expr_349[31:0];
  assign _10_ = _12_;
  assign _07_ = wire_Expr_365[26:0];
  assign _11_ = wire_Expr_420[31:0];
  assign wire_Expr_361 = a;
  assign wire_Expr_351 = { 14'h0000, wire_Expr_361 };
  assign wire_Expr_363 = wire_Expr_13[15:0];
  assign wire_Expr_353 = { 2'h0, wire_Expr_363 };
  assign wire_Expr_355 = { 16'h0000, wire_Expr_365 };
  assign wire_Expr_13 = b;
  assign wire_Expr_324 = wire_Expr_13[31:16];
  assign wire_Expr_318 = { 2'h0, wire_Expr_324 };
  assign wire_Expr_326 = wire_Expr_349[31:0];
  assign wire_Expr_365 = _12_;
  assign wire_Expr_357 = wire_Expr_365[26:0];
  assign wire_Expr_367 = wire_Expr_420[31:0];
  assign _12_ = { wire_Expr_349[15:0], 16'h0000 };
endmodule
